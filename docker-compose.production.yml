# Logan Security Dashboard - Production Docker Compose
version: '3.8'

services:
  # Main Logan Dashboard Application
  logan-dashboard:
    build:
      context: .
      dockerfile: Dockerfile.production
      target: runtime
    container_name: logan-dashboard
    restart: unless-stopped
    ports:
      - "${LOGAN_PORT:-3000}:3000"
    environment:
      # Application Configuration
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - PORT=3000
      - HOSTNAME=0.0.0.0
      
      # Logan Configuration
      - NEXT_PUBLIC_LOGAN_REGION=${LOGAN_REGION:-us-ashburn-1}
      - NEXT_PUBLIC_LOGAN_COMPARTMENT_ID=${LOGAN_COMPARTMENT_ID}
      - NEXT_PUBLIC_LOGAN_NAMESPACE=${LOGAN_NAMESPACE}
      
      # Oracle Database Configuration
      - ORACLE_DB_USER=${ORACLE_DB_USER}
      - ORACLE_DB_PASSWORD=${ORACLE_DB_PASSWORD}
      - ORACLE_DB_CONNECTION_STRING=${ORACLE_DB_CONNECTION_STRING}
      - TNS_ADMIN=/app/wallet_unzipped
      
      # Python Integration
      - PYTHON_PATH=/usr/bin/python3
      - PYTHONPATH=/app/scripts
      
      # Security Configuration
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - SESSION_SECRET=${SESSION_SECRET}
      
      # Feature Flags
      - FEATURE_PLUGINS_ENABLED=${FEATURE_PLUGINS_ENABLED:-false}
      - FEATURE_MODULE_SYSTEM_ENABLED=${FEATURE_MODULE_SYSTEM_ENABLED:-true}
      - FEATURE_ADVANCED_ANALYTICS=${FEATURE_ADVANCED_ANALYTICS:-true}
      
      # Performance Configuration
      - CACHE_TTL=${CACHE_TTL:-3600}
      - MAX_QUERY_RESULTS=${MAX_QUERY_RESULTS:-10000}
      - QUERY_TIMEOUT=${QUERY_TIMEOUT:-30000}
      
      # Logging Configuration
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_FORMAT=${LOG_FORMAT:-json}
      
      # External Service Configuration
      - N8N_WEBHOOK_URL=${N8N_WEBHOOK_URL}
      - RITA_ENABLED=${RITA_ENABLED:-false}
      
    volumes:
      # Oracle Wallet (if using file-based wallet)
      - "${WALLET_PATH:-./wallet_unzipped}:/app/wallet_unzipped:ro"
      
      # Persistent data
      - logan-logs:/app/logs
      - logan-temp:/app/temp
      - logan-uploads:/app/uploads
      
      # Configuration overrides
      - "${CONFIG_PATH:-./config}:/app/config:ro"
      
    networks:
      - logan-network
      
    healthcheck:
      test: ["CMD", "/app/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
      
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
        
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.logan.rule=Host(`${LOGAN_DOMAIN:-localhost}`)"
      - "traefik.http.routers.logan.tls=true"
      - "traefik.http.services.logan.loadbalancer.server.port=3000"

  # Redis for Caching (Optional)
  redis:
    image: redis:7-alpine
    container_name: logan-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - logan-redis-data:/data
    networks:
      - logan-network
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD}
      --maxmemory ${REDIS_MAX_MEMORY:-256mb}
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: logan-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - logan-nginx-logs:/var/log/nginx
    networks:
      - logan-network
    depends_on:
      - logan-dashboard
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3

networks:
  logan-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  logan-logs:
    driver: local
  logan-temp:
    driver: local
  logan-uploads:
    driver: local
  logan-redis-data:
    driver: local
  logan-nginx-logs:
    driver: local